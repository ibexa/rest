parameters:
    # Intention string used by the CSRF protection in REST context.
    ibexa.rest.csrf_token_intention: rest

    # URI part that all REST routes begin with. By this a REST request is recognized.
    ibexa.rest.path_prefix: /api/ibexa/v2

    ibexa.site_access.config.default.rest_root_resources:
        content:
            mediaType: ''
            href: 'router.generate("ibexa.rest.create_content")'
        contentByRemoteId:
            mediaType: ''
            href: 'templateRouter.generate("ibexa.rest.redirect_content", {remoteId: "{remoteId}"})'
        contentTypes:
            mediaType: 'ContentTypeInfoList'
            href: 'router.generate("ibexa.rest.list_content_types")'
        contentTypeByIdentifier:
            mediaType: ''
            href: 'templateRouter.generate("ibexa.rest.list_content_types", {identifier: "{identifier}"})'
        contentTypeGroups:
            mediaType: 'ContentTypeGroupList'
            href: 'router.generate("ibexa.rest.create_content_type_group")'
        contentTypeGroupByIdentifier:
            mediaType: ''
            href: 'templateRouter.generate("ibexa.rest.load_content_type_group_list", {identifier: "{identifier}"})'
        users:
            mediaType: 'UserRefList'
            href: 'router.generate("ibexa.rest.load_users")'
        usersByRoleId:
            mediaType: 'UserRefList'
            href: 'templateRouter.generate("ibexa.rest.load_users", {roleId: "{roleId}"})'
        usersByRemoteId:
            mediaType: 'UserRefList'
            href: 'templateRouter.generate("ibexa.rest.load_users", {remoteId: "{remoteId}"})'
        usersByEmail:
            mediaType: 'UserRefList'
            href: 'templateRouter.generate("ibexa.rest.load_users", {email: "{email}"})'
        usersByLogin:
            mediaType: 'UserRefList'
            href: 'templateRouter.generate("ibexa.rest.load_users", {login: "{login}"})'
        roles:
            mediaType: 'RoleList'
            href: 'router.generate("ibexa.rest.list_roles")'
        rootLocation:
            mediaType: 'Location'
            href: 'router.generate("ibexa.rest.load_location", {locationPath: "1/2"})'
        rootUserGroup:
            mediaType: 'UserGroup'
            href: 'router.generate("ibexa.rest.load_user_group", {groupPath: "1/5"})'
        rootMediaFolder:
            mediaType: 'Location'
            href: 'router.generate("ibexa.rest.load_location", {locationPath: "1/43"})'
        locationByRemoteId:
            mediaType: ''
            href: 'templateRouter.generate("ibexa.rest.redirect_location", {remoteId: "{remoteId}"})'
        locationByPath:
            mediaType: ''
            href: 'templateRouter.generate("ibexa.rest.redirect_location", {locationPath: "{locationPath}"})'
        trash:
            mediaType: 'Trash'
            href: 'router.generate("ibexa.rest.load_trash_items")'
        sections:
            mediaType: 'SectionList'
            href: 'router.generate("ibexa.rest.list_sections")'
        views:
            mediaType: 'RefList'
            href: 'router.generate("ibexa.rest.views.create")'
        objectStateGroups:
            mediaType: 'ObjectStateGroupList'
            href: 'router.generate("ibexa.rest.load_object_state_groups")'
        objectStates:
            mediaType: 'ObjectStateList'
            href: 'templateRouter.generate("ibexa.rest.load_object_states", {objectStateGroupId: "{objectStateGroupId}"})'
        globalUrlAliases:
            mediaType: 'UrlAliasRefList'
            href: 'router.generate("ibexa.rest.list_global_url_aliases")'
        urlWildcards:
            mediaType: 'UrlWildcardList'
            href: 'router.generate("ibexa.rest.list_url_wildcards")'
        createSession:
            mediaType: 'UserSession'
            href: 'router.generate("ibexa.rest.create_session")'
        refreshSession:
            mediaType: 'UserSession'
            href: 'templateRouter.generate("ibexa.rest.refresh_session", {sessionId: "{sessionId}"})'
        createToken:
            mediaType: 'JWT'
            href: 'router.generate("ibexa.rest.create_token")'
