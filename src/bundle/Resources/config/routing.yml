# Root resource


ibexa.rest.load_root_resource:
    path: /
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Root:loadRootResource
    methods: [GET]


# Sections


ibexa.rest.list_sections:
    path: /content/sections
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Section:listSections
    methods: [GET]

ibexa.rest.create_section:
    path: /content/sections
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Section:createSection
    methods: [POST]

ibexa.rest.load_section:
    path: /content/sections/{sectionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Section:loadSection
    methods: [GET]
    requirements:
        sectionId: \d+

ibexa.rest.update_section:
    path: /content/sections/{sectionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Section:updateSection
    methods: [PATCH]
    requirements:
        sectionId: \d+

ibexa.rest.delete_section:
    path: /content/sections/{sectionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Section:deleteSection
    methods: [DELETE]
    requirements:
        sectionId: \d+


# Content


ibexa.rest.redirect_content:
    path: /content/objects
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:redirectContent
    methods: [GET]

ibexa.rest.create_content:
    path: /content/objects
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:createContent
    methods: [POST]

ibexa.rest.update_content_metadata:
    path: /content/objects/{contentId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:updateContentMetadata
    methods: [PATCH]
    requirements:
        contentId: \d+

ibexa.rest.load_content:
    path: /content/objects/{contentId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:loadContent
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.delete_content:
    path: /content/objects/{contentId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:deleteContent
    methods: [DELETE]
    requirements:
        contentId: \d+

ibexa.rest.copy_content:
    path: /content/objects/{contentId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:copyContent
    methods: [COPY]
    requirements:
        contentId: \d+

ibexa.rest.delete_content_translation:
    path: /content/objects/{contentId}/translations/{languageCode}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:deleteContentTranslation
    methods: [DELETE]

ibexa.rest.redirect_current_version_relations:
    path: /content/objects/{contentId}/relations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:redirectCurrentVersionRelations
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.load_content_versions:
    path: /content/objects/{contentId}/versions
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:loadContentVersions
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.load_version_relations:
    path: /content/objects/{contentId}/versions/{versionNumber}/relations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:loadVersionRelations
    methods: [GET]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.create_relation:
    path: /content/objects/{contentId}/versions/{versionNumber}/relations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:createRelation
    methods: [POST]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.load_version_relation:
    path: /content/objects/{contentId}/versions/{versionNumber}/relations/{relationId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:loadVersionRelation
    methods: [GET]
    requirements:
        contentId: \d+
        versionNumber: \d+
        relationId: \d+

ibexa.rest.remove_relation:
    path: /content/objects/{contentId}/versions/{versionNumber}/relations/{relationId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:removeRelation
    methods: [DELETE]
    requirements:
        contentId: \d+
        versionNumber: \d+
        relationId: \d+

ibexa.rest.load_content_in_version:
    path: /content/objects/{contentId}/versions/{versionNumber}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:loadContentInVersion
    methods: [GET]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.update_version:
    path: /content/objects/{contentId}/versions/{versionNumber}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:updateVersion
    methods: [PATCH]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.delete_content_version:
    path: /content/objects/{contentId}/versions/{versionNumber}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:deleteContentVersion
    methods: [DELETE]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.delete_translation_from_draft:
    path: /content/objects/{contentId}/versions/{versionNumber}/translations/{languageCode}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:deleteTranslationFromDraft
    methods: [DELETE]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.create_draft_from_version:
    path: /content/objects/{contentId}/versions/{versionNumber}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:createDraftFromVersion
    methods: [COPY]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.publish_version:
    path: /content/objects/{contentId}/versions/{versionNumber}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:publishVersion
    methods: [PUBLISH]
    requirements:
        contentId: \d+
        versionNumber: \d+

ibexa.rest.redirect_current_version:
    path: /content/objects/{contentId}/currentversion
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:redirectCurrentVersion
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.create_draft_from_current_version:
    path: /content/objects/{contentId}/currentversion
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:createDraftFromCurrentVersion
    methods: [COPY]
    requirements:
        contentId: \d+

ibexa.rest.hide_content:
    path: /content/objects/{contentId}/hide
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:hideContent
    methods: [POST]
    requirements:
        contentId: \d+

ibexa.rest.reveal_content:
    path: /content/objects/{contentId}/reveal
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:revealContent
    methods: [POST]
    requirements:
        contentId: \d+

# Binary content

ibexa.rest.binary_content.get_image_variation:
    path: /content/binary/images/{imageId}/variations/{variationIdentifier}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\BinaryContent:getImageVariation
    methods: [GET]
    requirements:
        imageId: \d+-\d+(-\d+)?

# Views

# Deprecated in favour of /views from Platform 1.0
ibexa.rest.create_content_view:
    path: /content/views
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Content:createView
    methods: [POST]

# Views, Platform 1.0
ibexa.rest.views.create:
    path: /views
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Views:createView
    methods: [POST]

ibexa.rest.views.list:
    path: /views
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Views:listView
    methods: [GET]

ibexa.rest.views.load:
    path : /views/{viewId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Views:getView
    methods: [GET]

ibexa.rest.views.load.results:
    path: /views/{viewId}/results
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Views:loadViewResults
    methods: [GET]
# Object states


ibexa.rest.load_object_state_groups:
    path: /content/objectstategroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:loadObjectStateGroups
    methods: [GET]

ibexa.rest.create_object_state_group:
    path: /content/objectstategroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:createObjectStateGroup
    methods: [POST]

ibexa.rest.load_object_state_group:
    path: /content/objectstategroups/{objectStateGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:loadObjectStateGroup
    methods: [GET]
    requirements:
        objectStateGroupId: \d+

ibexa.rest.update_object_state_group:
    path: /content/objectstategroups/{objectStateGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:updateObjectStateGroup
    methods: [PATCH]
    requirements:
        objectStateGroupId: \d+

ibexa.rest.delete_object_state_group:
    path: /content/objectstategroups/{objectStateGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:deleteObjectStateGroup
    methods: [DELETE]
    requirements:
        objectStateGroupId: \d+

ibexa.rest.load_object_states:
    path: /content/objectstategroups/{objectStateGroupId}/objectstates
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:loadObjectStates
    methods: [GET]
    requirements:
        objectStateGroupId: \d+

ibexa.rest.create_object_state:
    path: /content/objectstategroups/{objectStateGroupId}/objectstates
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:createObjectState
    methods: [POST]
    requirements:
        objectStateGroupId: \d+

ibexa.rest.load_object_state:
    path: /content/objectstategroups/{objectStateGroupId}/objectstates/{objectStateId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:loadObjectState
    methods: [GET]
    requirements:
        objectStateGroupId: \d+
        objectStateId: \d+

ibexa.rest.update_object_state:
    path: /content/objectstategroups/{objectStateGroupId}/objectstates/{objectStateId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:updateObjectState
    methods: [PATCH]
    requirements:
        objectStateGroupId: \d+
        objectStateId: \d+

ibexa.rest.delete_object_state:
    path: /content/objectstategroups/{objectStateGroupId}/objectstates/{objectStateId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:deleteObjectState
    methods: [DELETE]
    requirements:
        objectStateGroupId: \d+
        objectStateId: \d+

ibexa.rest.get_object_states_for_content:
    path: /content/objects/{contentId}/objectstates
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:getObjectStatesForContent
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.set_object_states_for_content:
    path: /content/objects/{contentId}/objectstates
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ObjectState:setObjectStatesForContent
    methods: [PATCH]
    requirements:
        contentId: \d+


# Locations


ibexa.rest.redirect_location:
    path: /content/locations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:redirectLocation
    methods: [GET]

ibexa.rest.load_location:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:loadLocation
    methods: [GET]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.update_location:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:updateLocation
    methods: [PATCH]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.delete_subtree:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:deleteSubtree
    methods: [DELETE]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.copy_subtree:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:copySubtree
    methods: [COPY]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.move_subtree:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:moveSubtree
    methods: [MOVE]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.swap_location:
    path: /content/locations/{locationPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:swapLocation
    methods: [SWAP]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.load_location_children:
    path: /content/locations/{locationPath}/children
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:loadLocationChildren
    methods: [GET]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.load_locations_for_content:
    path: /content/objects/{contentId}/locations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:loadLocationsForContent
    methods: [GET]
    requirements:
        contentId: \d+

ibexa.rest.create_location:
    path: /content/objects/{contentId}/locations
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Location:createLocation
    methods: [POST]
    requirements:
        contentId: \d+


# Content types


ibexa.rest.load_content_type_group_list:
    path: /content/typegroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeGroupList
    methods: [GET]

ibexa.rest.create_content_type_group:
    path: /content/typegroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:createContentTypeGroup
    methods: [POST]

ibexa.rest.load_content_type_group:
    path: /content/typegroups/{contentTypeGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeGroup
    methods: [GET]
    requirements:
        contentTypeGroupId: \d+

ibexa.rest.update_content_type_group:
    path: /content/typegroups/{contentTypeGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:updateContentTypeGroup
    methods: [PATCH]
    requirements:
        contentTypeGroupId: \d+

ibexa.rest.delete_content_type_group:
    path: /content/typegroups/{contentTypeGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:deleteContentTypeGroup
    methods: [DELETE]
    requirements:
        contentTypeGroupId: \d+

ibexa.rest.list_content_types_for_group:
    path: /content/typegroups/{contentTypeGroupId}/types
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:listContentTypesForGroup
    methods: [GET]
    requirements:
        contentTypeGroupId: \d+

ibexa.rest.create_content_type:
    path: /content/typegroups/{contentTypeGroupId}/types
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:createContentType
    methods: [POST]
    requirements:
        contentTypeGroupId: \d+

ibexa.rest.list_content_types:
    # @todo: Handle all GET parameters
    path: /content/types
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:listContentTypes
    methods: [GET]

ibexa.rest.copy_content_type:
    path: /content/types/{contentTypeId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:copyContentType
    methods: [COPY]
    requirements:
        contentTypeId: \d+

ibexa.rest.load_content_type:
    path: /content/types/{contentTypeId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentType
    methods: [GET]
    requirements:
        contentTypeId: \d+

ibexa.rest.create_content_type_draft:
    path: /content/types/{contentTypeId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:createContentTypeDraft
    methods: [POST]
    requirements:
        contentTypeId: \d+

ibexa.rest.delete_content_type:
    path: /content/types/{contentTypeId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:deleteContentType
    methods: [DELETE]
    requirements:
        contentTypeId: \d+

ibexa.rest.delete_content_type_draft:
    path: /content/types/{contentTypeId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:deleteContentTypeDraft
    methods: [DELETE]
    requirements:
        contentTypeId: \d+

ibexa.rest.load_content_type_field_definition_list:
    path: /content/types/{contentTypeId}/fieldDefinitions
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeFieldDefinitionList
    methods: [GET]
    requirements:
        contentTypeId: \d+

ibexa.rest.load_content_type_field_definition:
    path: /content/types/{contentTypeId}/fieldDefinitions/{fieldDefinitionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeFieldDefinition
    methods: [GET]
    requirements:
        contentTypeId: \d+
        fieldDefinitionId: \d+

ibexa.rest.load_content_type_draft:
    path: /content/types/{contentTypeId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeDraft
    methods: [GET]
    requirements:
        contentTypeId: \d+

ibexa.rest.update_content_type_draft:
    path: /content/types/{contentTypeId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:updateContentTypeDraft
    methods: [PATCH]
    requirements:
        contentTypeId: \d+

ibexa.rest.publish_content_type_draft:
    path: /content/types/{contentTypeId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:publishContentTypeDraft
    methods: [PUBLISH]
    requirements:
        contentTypeId: \d+

ibexa.rest.load_content_type_draft_field_definition_list:
    path: /content/types/{contentTypeId}/draft/fieldDefinitions
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeDraftFieldDefinitionList
    methods: [GET]
    requirements:
        contentTypeId: \d+

ibexa.rest.add_content_type_draft_field_definition:
    path: /content/types/{contentTypeId}/draft/fieldDefinitions
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:addContentTypeDraftFieldDefinition
    methods: [POST]
    requirements:
        contentTypeId: \d+

ibexa.rest.load_content_type_draft_field_definition:
    path: /content/types/{contentTypeId}/draft/fieldDefinitions/{fieldDefinitionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadContentTypeDraftFieldDefinition
    methods: [GET]
    requirements:
        contentTypeId: \d+
        fieldDefinitionId: \d+

ibexa.rest.update_content_type_draft_field_definition:
    path: /content/types/{contentTypeId}/draft/fieldDefinitions/{fieldDefinitionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:updateContentTypeDraftFieldDefinition
    methods: [PATCH]
    requirements:
        contentTypeId: \d+
        fieldDefinitionId: \d+

ibexa.rest.remove_content_type_draft_field_definition:
    path: /content/types/{contentTypeId}/draft/fieldDefinitions/{fieldDefinitionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:removeContentTypeDraftFieldDefinition
    methods: [DELETE]
    requirements:
        contentTypeId: \d+
        fieldDefinitionId: \d+

ibexa.rest.load_groups_of_content_type:
    path: /content/types/{contentTypeId}/groups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:loadGroupsOfContentType
    methods: [GET]
    requirements:
        contentTypeId: \d+

ibexa.rest.link_content_type_to_group:
    # Handle GET parameter group in controller. Most likely already done
    path: /content/types/{contentTypeId}/groups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:linkContentTypeToGroup
    methods: [POST]
    requirements:
        contentTypeId: \d+

ibexa.rest.unlink_content_type_from_group:
    path: /content/types/{contentTypeId}/groups/{contentTypeGroupId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\ContentType:unlinkContentTypeFromGroup
    methods: [DELETE]
    requirements:
        contentTypeId: \d+
        contentTypeGroupId: \d+


# Trash


ibexa.rest.load_trash_items:
    path: /content/trash
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Trash:loadTrashItems
    methods: [GET]

ibexa.rest.empty_trash:
    path: /content/trash
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Trash:emptyTrash
    methods: [DELETE]

ibexa.rest.load_trash_item:
    path: /content/trash/{trashItemId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Trash:loadTrashItem
    methods: [GET]
    requirements:
        trashItemId: \d+

ibexa.rest.delete_trash_item:
    path: /content/trash/{trashItemId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Trash:deleteTrashItem
    methods: [DELETE]
    requirements:
        trashItemId: \d+

ibexa.rest.restore_trash_item:
    path: /content/trash/{trashItemId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Trash:restoreTrashItem
    methods: [MOVE]
    requirements:
        trashItemId: \d+


# URL wildcards


ibexa.rest.list_url_wildcards:
    path: /content/urlwildcards
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLWildcard:listURLWildcards
    methods: [GET]

ibexa.rest.create_url_wildcard:
    path: /content/urlwildcards
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLWildcard:createURLWildcard
    methods: [POST]

ibexa.rest.load_url_wildcard:
    path: /content/urlwildcards/{urlWildcardId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLWildcard:loadURLWildcard
    methods: [GET]
    requirements:
        urlWildcardId: \d+

ibexa.rest.delete_url_wildcard:
    path: /content/urlwildcards/{urlWildcardId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLWildcard:deleteURLWildcard
    methods: [DELETE]
    requirements:
        urlWildcardId: \d+


# User policies


ibexa.rest.list_policies_for_user:
    path: /user/policies
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:listPoliciesForUser
    methods: [GET]


# Roles


ibexa.rest.list_roles:
    path: /user/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:listRoles
    methods: [GET]

ibexa.rest.create_role:
    path: /user/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:createRole
    methods: [POST]
    requirements:

ibexa.rest.create_role_draft:
    path: /user/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:createRoleDraft
    methods: [POST]
    requirements:
        roleId: \d+

ibexa.rest.load_role:
    path: /user/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRole
    methods: [GET]
    requirements:
        roleId: \d+

ibexa.rest.load_role_draft:
    path: /user/roles/{roleId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRoleDraft
    methods: [GET]
    requirements:
        roleId: \d+

ibexa.rest.update_role:
    path: /user/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:updateRole
    methods: [PATCH]
    requirements:
        roleId: \d+

ibexa.rest.update_role_draft:
    path: /user/roles/{roleId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:updateRoleDraft
    methods: [PATCH]
    requirements:
        roleId: \d+

ibexa.rest.publish_role_draft:
    path: /user/roles/{roleId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:publishRoleDraft
    methods: [PUBLISH]
    requirements:
        roleId: \d+

ibexa.rest.delete_role:
    path: /user/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:deleteRole
    methods: [DELETE]
    requirements:
        roleId: \d+

ibexa.rest.delete_role_draft:
    path: /user/roles/{roleId}/draft
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:deleteRoleDraft
    methods: [DELETE]
    requirements:
        roleId: \d+

ibexa.rest.load_policies:
    path: /user/roles/{roleId}/policies
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadPolicies
    methods: [GET]
    requirements:
        roleId: \d+

ibexa.rest.add_policy:
    path: /user/roles/{roleId}/policies
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:addPolicy
    methods: [POST]
    requirements:
        roleId: \d+

ibexa.rest.delete_policies:
    path: /user/roles/{roleId}/policies
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:deletePolicies
    methods: [DELETE]
    requirements:
        roleId: \d+

ibexa.rest.load_policy:
    path: /user/roles/{roleId}/policies/{policyId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadPolicy
    methods: [GET]
    requirements:
        roleId: \d+
        policyId: \d+

ibexa.rest.update_policy:
    path: /user/roles/{roleId}/policies/{policyId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:updatePolicy
    methods: [PATCH]
    requirements:
        roleId: \d+
        policyId: \d+

ibexa.rest.delete_policy:
    path: /user/roles/{roleId}/policies/{policyId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:deletePolicy
    methods: [DELETE]
    requirements:
        roleId: \d+
        policyId: \d+


# Users


ibexa.rest.verify_users:
    path: /user/users
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:verifyUsers
    methods: [HEAD]

ibexa.rest.load_users:
    path: /user/users
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUsers
    methods: [GET]

ibexa.rest.load_user:
    path: /user/users/{userId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUser
    methods: [GET]
    requirements:
        userId: \d+

ibexa.rest.update_user:
    path: /user/users/{userId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:updateUser
    methods: [PATCH]
    requirements:
        userId: \d+

ibexa.rest.delete_user:
    path: /user/users/{userId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:deleteUser
    methods: [DELETE]
    requirements:
        userId: \d+

ibexa.rest.load_user_groups_of_user:
    path: /user/users/{userId}/groups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUserGroupsOfUser
    methods: [GET]
    requirements:
        userId: \d+

ibexa.rest.assign_user_to_user_group:
    path: /user/users/{userId}/groups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:assignUserToUserGroup
    methods: [POST]
    requirements:
        userId: \d+

ibexa.rest.unassign_user_from_user_group:
    path: /user/users/{userId}/groups/{groupPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:unassignUserFromUserGroup
    methods: [DELETE]
    requirements:
        userId: \d+
        groupPath: \d+

ibexa.rest.load_user_drafts:
    path: /user/users/{userId}/drafts
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUserDrafts
    methods: [GET]
    requirements:
        userId: \d+

ibexa.rest.load_role_assignments_for_user:
    path: /user/users/{userId}/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRoleAssignmentsForUser
    methods: [GET]
    requirements:
        userId: \d+

ibexa.rest.assign_role_to_user:
    path: /user/users/{userId}/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:assignRoleToUser
    methods: [POST]
    requirements:
        userId: \d+

ibexa.rest.load_role_assignment_for_user:
    path: /user/users/{userId}/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRoleAssignmentForUser
    methods: [GET]
    requirements:
        userId: \d+
        roleId: \d+

ibexa.rest.unassign_role_from_user:
    path: /user/users/{userId}/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:unassignRoleFromUser
    methods: [DELETE]
    requirements:
        userId: \d+
        roleId: \d+

ibexa.rest.load_user_groups:
    path: /user/groups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUserGroups
    methods: [GET]

ibexa.rest.load_root_user_group:
    path: /user/groups/root
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadRootUserGroup
    methods: [GET]

ibexa.rest.create_root_user_group:
    path: /user/groups/subgroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:createUserGroup
    methods: [POST]

ibexa.rest.load_user_group:
    path: /user/groups/{groupPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUserGroup
    methods: [GET]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.update_user_group:
    path: /user/groups/{groupPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:updateUserGroup
    methods: [PATCH]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.delete_user_group:
    path: /user/groups/{groupPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:deleteUserGroup
    methods: [DELETE]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.move_user_group:
    path: /user/groups/{groupPath}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:moveUserGroup
    methods: [MOVE]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.load_sub_user_groups:
    path: /user/groups/{groupPath}/subgroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadSubUserGroups
    methods: [GET]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.create_user_group:
    path: /user/groups/{groupPath}/subgroups
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:createUserGroup
    methods: [POST]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.load_users_from_group:
    path: /user/groups/{groupPath}/users
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:loadUsersFromGroup
    methods: [GET]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.create_user:
    path: /user/groups/{groupPath}/users
    defaults:
        _controller: Ibexa\Rest\Server\Controller\User:createUser
    methods: [POST]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.load_role_assignments_for_user_group:
    path: /user/groups/{groupPath}/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRoleAssignmentsForUserGroup
    methods: [GET]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.assign_role_to_user_group:
    path: /user/groups/{groupPath}/roles
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:assignRoleToUserGroup
    methods: [POST]
    requirements:
        groupPath: "[0-9/]+"

ibexa.rest.load_role_assignment_for_user_group:
    path: /user/groups/{groupPath}/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:loadRoleAssignmentForUserGroup
    methods: [GET]
    requirements:
        groupPath: "[0-9/]+"
        roleId: \d+

ibexa.rest.unassign_role_from_user_group:
    path: /user/groups/{groupPath}/roles/{roleId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Role:unassignRoleFromUserGroup
    methods: [DELETE]
    requirements:
        groupPath: "[0-9/]+"
        roleId: \d+

ibexa.rest.create_session:
    path: /user/sessions
    defaults:
        _controller: Ibexa\Rest\Server\Controller\SessionController:createSessionAction
        csrf_protection: false
    methods: [POST]

ibexa.rest.delete_session:
    path: /user/sessions/{sessionId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\SessionController:deleteSessionAction
        csrf_protection: false
    methods: [DELETE]

ibexa.rest.refresh_session:
    path: /user/sessions/{sessionId}/refresh
    defaults:
        _controller: Ibexa\Rest\Server\Controller\SessionController:refreshSessionAction
        csrf_protection: false
    methods: [POST]


# URL aliases


ibexa.rest.list_global_url_aliases:
    path: /content/urlaliases
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLAlias:listGlobalURLAliases
    methods: [GET]

ibexa.rest.list_location_url_aliases:
    path: /content/locations/{locationPath}/urlaliases
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLAlias:listLocationURLAliases
    methods: [GET]
    requirements:
        locationPath: "[0-9/]+"

ibexa.rest.create_url_alias:
    path: /content/urlaliases
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLAlias:createURLAlias
    methods: [POST]

ibexa.rest.load_url_alias:
    path: /content/urlaliases/{urlAliasId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLAlias:loadURLAlias
    methods: [GET]

ibexa.rest.delete_url_alias:
    path: /content/urlaliases/{urlAliasId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\URLAlias:deleteURLAlias
    methods: [DELETE]


# Services


ibexa.rest.load_country_list:
    path: /services/countries
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Services:loadCountryList
    methods: [GET]

# Bookmark

ibexa.rest.create_bookmark:
    path: /bookmark/{locationId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Bookmark:createBookmark
    methods: [POST]
    requirements:
        locationId: "[0-9]+"

ibexa.rest.delete_bookmark:
    path: /bookmark/{locationId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Bookmark:deleteBookmark
    methods: [DELETE]
    requirements:
        locationId: "[0-9]+"

ibexa.rest.is_bookmarked:
    path: /bookmark/{locationId}
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Bookmark:isBookmarked
    methods: [GET, HEAD]
    requirements:
        locationId: "[0-9]+"

ibexa.rest.load_bookmarks:
    path: /bookmark
    defaults:
        _controller: Ibexa\Rest\Server\Controller\Bookmark:loadBookmarks
    methods: [GET]

# JWT

ibexa.rest.create_token:
    path: /user/token/jwt
    controller: Ibexa\Rest\Server\Controller\JWT::createToken
    methods: [POST]
